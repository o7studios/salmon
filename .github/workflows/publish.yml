name: Publish workflow
on:
  push:

env:
  REGISTRY: ghcr.io

permissions:
  contents: write
  packages: write

jobs:
  build:
    if: ( github.event_name == 'push' && ( github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') ) )
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.image-ref.outputs.image }}
      image_latest: ${{ steps.image-ref.outputs.image_latest }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create image ref
        id: image-ref
        run: |
          REF=$(git rev-parse --short $GITHUB_SHA)
          IMAGE=${{ env.REGISTRY }}/${{ github.repository }}:${REF}
          IMAGE_LATEST=${{ env.REGISTRY }}/${{ github.repository }}:latest

          echo "image=${IMAGE}" >> $GITHUB_STATE
          echo "image_latest=${IMAGE_LATEST}" >> $GITHUB_OUTPUT

          echo "${IMAGE}" >> $GITHUB_STEP_SUMMARY

      - name: Build and push docker image
        uses: docker/build-push-action@v6
        with:
          file: Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64,windows/amd64,windows/arm64,darwin/amd64,darwin/arm64,linux/arm/v7,linux/arm/v8,linux/s390x
          cache-from: type=registry,ref=${{ steps.image-ref.outputs.image_latest }}
          cache-to: type=inline
          tags: |
            ${{ steps.image-ref.outputs.image }}
            ${{ steps.image-ref.outputs.image_latest }}